# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/profiles/qemu-guest.nix") ./disk-config.nix ];
  boot = {
    kernelModules = [ "kvm-amd" "kvm-intel" ];
    extraModulePackages = [ ];
    growPartition = true;
    loader = {
      timeout = 10;
      grub = {
        enable = true;
        devices = [ "/dev/vda" ];
        device = "/dev/vda";
        efiSupport = true;
        efiInstallAsRemovable = true;
        enableCryptodisk = true;
      };
    };
    initrd = {
      # boot.loader.grub.enable = true;
      # boot.loader.grub.useOSProber = true;
      # boot.loader.grub.efiSupport = true;
      # availableKernelModules = [
      #   "ehci_pci"
      #   "virtio_scsi"
      #   "ahci"
      #   "ata_piix"
      #   "nvme"
      #   "sd_mod"
      #   "sr_mod"
      #   "uhci_hcd"
      #   "usb_storage"
      #   "usbhid"
      #   "virtio_blk"
      #   "virtio_pci"
      #   "xhci_pci"
      #   "virtio_net"
      #   "virtio_mmio"
      #   "9p"
      #   "9pnet_virtio"
      # ];
      availableKernelModules = [
        "ahci"
        "ata_piix"
        "nvme"
        "sd_mod"
        "sr_mod"
        "uhci_hcd"
        "usb_storage"
        "usbhid"
        "virtio_blk"
        "virtio_pci"
        "xhci_pci"
      ];
      # kernelModules = [ "virtio_balloon" "virtio_console" "virtio_rng" ];
    };
    # kernelParams = [ "console=ttyS0" ];

  };
  services.fstrim = {
    enable = true;
    interval = "weekly";
  };
  # Currently all our providers use KVM / QEMU
  services.qemuGuest.enable = true;
  networking.useDHCP = lib.mkDefault true;
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.interfaces.enp6s18.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
